version: "3"

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
      target: app
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "3300:3300"
    env_file:
      - .env.production.local
    volumes:
      - web-uploads:/app/uploads
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      typesense:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:15
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  typesense:
    container_name: typesense
    image: typesense/typesense:0.24.0
    restart: unless-stopped
    ports:
      - "8108:8108"
    environment:
      TYPESENSE_DATA_DIR: "/data"
      TYPESENSE_ENABLE_CORS: "true"
    env_file:
      - .env.production.local
    volumes:
      - typesense-data:/data
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "apt install curl -y &>/dev/null || curl --silent --fail localhost:8108/health || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  web-uploads:
    name: web-uploads
  postgres-data:
    name: postgres-data
  typesense-data:
    name: typesense-data

networks:
  app-network:
    name: app-network
